(function () {
    var e = !1;
    this.Class = function () {}, Class.extend = function (t) {
        function n(t) {
            if (!(this instanceof arguments.callee)) return new arguments.callee(arguments);
            !e && this.init && this.init.apply(this, t.callee ? t : arguments)
        }
        var r = this.prototype,
            i, s, o, u;
        e = !0, i = new this, e = !1;
        for (s in t) i[s] = typeof t[s] == "function" && typeof r[s] == "function" ? function (e, t) {
            return function () {
                return o = this._super, this._super = r[e], u = t.apply(this, arguments), this._super = o, u
            }
        }(s, t[s]): t[s];
        return n.prototype = i, n.constructor = n, n.extend = arguments.callee, n
    }
})(),
    function () {
        function e(e) {
            return document.getElementById(e)
        }
        var t = 0;
        Score = Class.extend({
            init: function (t) {
                t = t || {}, this.opts = t, this.layout = t.layout || "{points} points", this.e_clock = e(t.clock), this.e_point = e(t.points), this.restart()
            },
            now: function () {
                return (new Date).getTime()
            },
            restart: function () {
                this.start = this.stopTime = this.last = this.now(), this.points = this.opts.startPoint || 1e4, this.updatePoints(), this.startTime()
            },
            updatePoints: function () {
                this.e_point.innerHTML = this.layout.replace("{points}", this.points)
            },
            startTime: function () {
                var e = this;
                this.uuid = t,
                    function () {
                        if (e.uuid == t) {
                            var n = e.stopTime = e.now();
                            e.e_clock.innerHTML = e.time(), n - e.last > (e.opts.every || 1e4) && (e.last = n, e.down(e.opts.deduct || 10)), setTimeout(arguments.callee, 1e3)
                        }
                    }()
            },
            stop: function () {
                ++t
            },
            up: function (e) {
                this.points += e, this.updatePoints()
            },
            down: function (e) {
                this.points -= e, this.updatePoints()
            },
            getTime: function () {
                return this.stopTime - this.start
            },
            getScore: function () {
                return this.points
            },
            time: function () {
                var e = ~~ ((this.stopTime - this.start) / 1e3),
                    t = e % 60,
                    n = ~~ (e / 60),
                    r = ~~ (n / 60);
                return n %= 60, (r > 9 ? r : "0" + r) + ":" + (n > 9 ? n : "0" + n % 60) + ":" + (t > 9 ? t : "0" + t)
            }
        })
    }(),
    function () {
        function e(e, t, n, r, i) {
            var s, o = n.length,
                u, a = 1,
                f = t.length - 1,
                l = x[e],
                c = S[e],
                h = {
                    row: r,
                    col: i
                };
            if (l(f, o - 1, h)) return 0;
            for (s = 0; s < o; s++) {
                u = n.charAt(s);
                if (t[h.row][h.col] && t[h.row][h.col] != u) return 0;
                t[h.row][h.col] == u && a++, c(h)
            }
            return a
        }
        function t(e, t, n, r, i) {
            var s = n.length,
                o = S[e],
                u = {
                    row: r,
                    col: i
                };
            for (var a = 0; a < s; a++) t[u.row][u.col] = n.charAt(a), a < s - 1 && o(u);
            return u
        }
        function n(e, t) {
            var n;
            for (n in t) t.hasOwnProperty(n) && !(n in e) && (e[n] = t[n]);
            return e
        }
        function r(e, t) {
            var n = document.getElementById(e).innerHTML;
            for (var r in t) t.hasOwnProperty(r) && (n = n.replace(new RegExp("{" + r + "}", "g"), t[r]));
            return n
        }
        function i(e) {
            var t = s(e);
            return t.getContext || G_vmlCanvasManager.initElement(t), t.getContext("2d")
        }
        function s(e) {
            return document.getElementById(e)
        }
        function o(e, t) {
            return parseInt(Math.random() * (t - e + 1)) + e
        }
        function u() {
            return String.fromCharCode(o(b, w))
        }
        function a(e) {
            return e[o(0, e.length - 1)] || e[0]
        }
        function f(e) {
            var t = [],
                n = 0;
            for (; n < e; n++) t.push({});
            return t
        }
        function l() {
            return words
        }
        function h(e) {
            var t = [];
            for (var n in e) e.hasOwnProperty(n) && t.push(n);
            return t
        }
        function p(n, r, i, s) {
            var u = f(r),
                l = {};
            u.wordsNum = 0, s = s < r * 2 ? s : r * 2;
            var c = (new Date).getTime();
            while (n.length && u.wordsNum < s && (new Date).getTime() - c < 900) {
                var h = {};
                for (var p = 0; p < i; p++) {
                    var d = a(n),
                        v = o(0, r - 1),
                        m = o(0, r - 1),
                        g = a(E),
                        y = e(g, u, d, m, v);
                    if (h[d] && h[d].score > y) continue;
                    h[d] = {
                        score: y,
                        dir: g,
                        word: d,
                        ini: {
                            row: m,
                            col: v
                        }
                    }
                }
                var b = 0,
                    w = null;
                for (var d in h) h[d].score > b && (b = h[d].score, w = h[d]);
                w && (l[w.word] = w, u.wordsNum++, n.splice(T(n, w.word), 1), w.end = t(w.dir, u, w.word, w.ini.row, w.ini.col))
            }
            return u.wordlist = l, u
        }
        function d(e) {
            var t = 0,
                n = 0;
            if (e.offsetParent) do t += e.offsetLeft, n += e.offsetTop;
            while (e = e.offsetParent);
            return {
                x: t,
                y: n
            }
        }
        function v(e) {
            e.clearRect(0, 0, e.canvas.width, e.canvas.width)
        }
        function m(e) {
            return function (t) {
                t.preventDefault(), t = t.touches ? t.touches[0] : t, e._mousedown = !0, pos = e.pos = d(e.l_ctx.canvas), e._inix = (t.pageX - e.pos.x + 1 || t.offsetX + 1) - 1, e._iniy = (t.pageY - e.pos.y + 1 || t.offsetY + 1) - 1, e._row = parseInt(e._iniy / e.c_size), e._col = parseInt(e._inix / e.c_size)
            }
        }
        function g(e) {
            return function (t) {
                t.preventDefault(), e._mousedown = !1, v(e.l_ctx);
                var n = e.lastx,
                    r = e.lasty,
                    i = parseInt(r / e.c_size),
                    o = parseInt(n / e.c_size);
                if (Math.abs(e._row - i) == Math.abs(e._col - o) || e._col == o && e._row != i || e._row == i && e._col != o) {
                    var u = e._col - o,
                        a = e._row - i,
                        f = [];
                    if (u == 0) {
                        a = a > 0 ? -1 : 1;
                        for (var l = e._row; l != i + a; l += a) f.push(e.grid[l][o] || "-")
                    } else if (a == 0) {
                        u = u > 0 ? -1 : 1;
                        for (var l = e._col; l != o + u; l += u) f.push(e.grid[i][l] || "-")
                    } else {
                        a = a > 0 ? -1 : 1, u = u > 0 ? -1 : 1;
                        var l = e._row,
                            c = e._col;
                        while (l != i + a && c != o + u) f.push(e.grid[l][c] || "-"), l += a, c += u
                    }
                    var h = f.slice().reverse().join("");
                    f = f.join("");
                    if (e.grid.wordlist[f] || e.grid.wordlist[h]) f = (e.grid.wordlist[f] || e.grid.wordlist[h]).word, e.cross(f, e._row, e._col, i, o), s("soup-" + f).className = "crossed", s("soup-" + f).innerHTML = f
                }
            }
        }
        function y(e) {
            return function (t) {
                t.preventDefault(), t = t.touches ? t.touches[0] : t;
                if (!e._mousedown) return;
                var n = (t.pageX - e.pos.x + 1 || t.offsetX + 1) - 1,
                    r = (t.pageY - e.pos.y + 1 || t.offsetY + 1) - 1,
                    i = e.l_ctx;
                v(i), i.lineCap = "round", i.strokeStyle = e.opts.selectColor, i.globalAlpha = .5, i.lineWidth = e.c_size * .8, i.beginPath(), i.moveTo(e._inix, e._iniy), i.lineTo(n, r), i.stroke(), i.closePath(), e.lastx = n, e.lasty = r
            }
        }
        var b = "a".charCodeAt(0),
            w = "z".charCodeAt(0),
            E = "S SW SO N NW NO W O".split(" "),
            S = {
                S: function (e) {
                    e.row++
                },
                SW: function (e) {
                    e.row++, e.col--
                },
                SO: function (e) {
                    e.row++, e.col++
                },
                N: function (e) {
                    e.row--
                },
                NW: function (e) {
                    e.row--, e.col--
                },
                NO: function (e) {
                    e.row--, e.col++
                },
                W: function (e) {
                    e.col--
                },
                O: function (e) {
                    e.col++
                }
            }, x = {
                S: function (e, t, n) {
                    return n.row + t > e
                },
                SW: function (e, t, n) {
                    return n.row + t > e || n.col - t < 0
                },
                SO: function (e, t, n) {
                    return n.row + t > e || n.col + t > e
                },
                N: function (e, t, n) {
                    return n.row - t < 0
                },
                NW: function (e, t, n) {
                    return n.row - t < 0 || n.col - t < 0
                },
                NO: function (e, t, n) {
                    return n.row - t < 0 || n.col + t > e
                },
                W: function (e, t, n) {
                    return n.col - t < 0
                },
                O: function (e, t, n) {
                    return n.col + t > e
                }
            }, T = function () {
                return [].indexOf ? function (e, t) {
                    return e.indexOf(t)
                } : function (e, t) {
                    for (var n = 0, r = e.length; n < r; n++) if (t === e[n]) return n;
                    return -1
                }
            }();
        closeModal = function (e) {
            return e.parentNode.className = "hide", s("overlay").className = "hide", !1
        };
        var N = function (e, t, n) {
                return document.addEventListener ? function (e, t, n) {
                    e.addEventListener(t, n, !1)
                } : function (e, n, r) {
                    e.attachEvent("on" + n, function (e) {
                        return e = e || t, e.preventDefault = e.preventDefault || function () {
                            this.returnValue = !1
                        }, e.stopPropagation = e.stopPropagation || function () {
                            this.cancelBubble = !0
                        }, r.call(e.target || e.srcElement, e)
                    })
                }
            }(),
            C = {
                fontSize: 12,
                fontFamily: "Arial",
                color: "black",
                selectColor: "blue",
                size: 20,
                wordsNum: 10,
                clock: "clock",
                points: "points",
                layout: "You have {points} points",
                startPoint: 1e3,
                every: 1e4,
                deduct: 10,
                words:[] ,
                winSound: undefined
            };
        Soup = Class.extend({
            init: function (e) {
                this.g_ctx = i("grid"), this.s_ctx = i("lines"), this.l_ctx = i("layer"), this.ctxs = [this.g_ctx, this.s_ctx, this.l_ctx], this.wrap = s("word-search"), this.desc = s("word-description"), this.list = s("word-list"), this.opts = n(e || {}, C), this.score = new Score(this.opts), this.setSize(), this.setWordsNum(), this.restart(), this.init_events()
            },
            setSize: function (e) {
                this.opts.size = e || this.opts.size, s("set-size").value = this.opts.size
            },
            getSize: function (e) {
                return this.opts.size
            },
            setWordsNum: function (e) {
                var t = this.opts.size;
                e = e || this.opts.wordsNum, this.opts.wordsNum = e, s("set-words").value = e <= t ? 1 : e <= t * 1.5 ? "1.5" : 2
            },
            getWordsNum: function (e) {
                return this.opts.wordsNum
            },
            setFontSize: function (e) {
                this.opts.fontSize = e, this.draw_grid(), this.draw_founds()
            },
            getFontSize: function () {
                return this.opts.fontSize
            },
            show_score: function (e, t) {
                var n = s("congrat");
                n.className = "modal", s("overlay").className = "", n.innerHTML = r("congrat-tmpl", {
                    time: e,
                    score: t
                })
            },
            restart: function () {
                this.data = this.opts.words, this.grid = p(h(this.data), this.opts.size, 50, this.opts.wordsNum), this.draw_word_list(), this.draw_grid(this.g_ctx), this.cross_points = [], this.founds = {}, this.score.restart()
            },
            hint: function (e) {
                if (!(e in this.grid.wordlist)) return;
                var t = this.grid.wordlist[e];
                this.founds[e] || (typeof this.opts.onHint == "function" && this.opts.onHint.call(this), this.cross(e, t.ini.row, t.ini.col, t.end.row, t.end.col), s("soup-" + e).className = "bad-crossed", s("soup-" + e).innerHTML = e, this.draw_founds())
            },
            cross: function (e, t, n, r, i) {
                if (this.founds[e]) return;
                this.cross_points.push({
                    c1: n,
                    r1: t,
                    c2: i,
                    r2: r
                }), this.founds[e] = !0, this.draw_founds();
                if (this.cross_points.length == this.grid.wordsNum) {
                    this.score.stop();
                    var s = this.score.getScore(),
                        o = this.score.time();
                    this.show_score(o, s), this.opts.onFinish.call(this, o, s)
                }
                return !0
            },
            draw_word_list: function () {
                var e = this.list;
                this.list.innerHTML = "", e.id = "soup-word-list";
                for (var t in this.grid.wordlist) if (this.grid.wordlist.hasOwnProperty(t)) {
                    var n = document.createElement("li"),
                        r = document.createElement("a");
                    r.innerHTML = "", r.href = "#", n.innerHTML = t + " ", n.appendChild(r), n.id = "soup-" + t, e.appendChild(n)
                }
                this.wrap.appendChild(e)
            },
            draw_founds: function () {
                var e = this.s_ctx;
                this.opts.winSound.load();
                this.opts.winSound.play();
                v(e), e.lineCap = "round", e.strokeStyle = "#73f412", e.globalAlpha = .85, e.lineWidth = this.c_size * .8, e.beginPath();
                var t = this.opts.fontSize,
                    n = this.c_size;
                for (var r = 0; r < this.cross_points.length; r++) {
                    var i = this.cross_points[r];
                    e.moveTo(i.c1 * n + t, i.r1 * n + t), e.lineTo(i.c2 * n + t, i.r2 * n + t)
                }
                e.stroke(), e.closePath()
            },
            set_canvas_size: function (e) {
                for (var t = 0; t < 3; t++) this.ctxs[t].canvas.width = this.ctxs[t].canvas.height = e;
                this.wrap.style.width = e + 270 + "px", this.wrap.style.height = this.list.style.height = e + "px", this.desc.style.marginTop = e + 10 + "px"
            },
            draw_grid: function (e) {
                e = this.g_ctx;
                var t = this.grid.length,
                    n = this.opts.fontSize,
                    r = this.c_size = n * 2,
                    i = r * t,
                    s, o;
                this.set_canvas_size(i), e.textAlign = "center", e.font = n + "px " + this.opts.fontFamily, e.fillStyle = this.opts.color;
                for (s = 0; s < t; s++) for (o = 0; o < t; o++) this.grid[s][o] = this.grid[s][o] || u(), c = this.grid[s][o].toUpperCase(), e.beginPath(), e.fillText(c, r * o + n, r * s + n * 1.4), this.opts.draw_cells && (e.rect(r * o, r * s, r, r), e.stroke()), e.closePath()
            },
            init_events: function () {
                var e = this.pos = d(this.g_ctx.canvas),
                    t = this;
                this.l_ctx.canvas.onselectstart = function () {
                    return !1
                }, this.l_ctx.canvas.onmousedown = function () {
                    return !1
                }, N(this.l_ctx.canvas, "mousedown", m(this)), N(this.l_ctx.canvas, "mouseup", g(this)), N(this.l_ctx.canvas, "mousemove", y(this));
                if ("ontouchstart" in window || window.DocumentTouch && document instanceof DocumentTouch) N(this.l_ctx.canvas, "touchstart", m(this)), N(this.l_ctx.canvas, "touchend", g(this)), N(this.l_ctx.canvas, "touchmove", y(this));
                N(s("restart"), "click", function () {
                    return t.restart(), !1
                }), N(s("set-size"), "change", function (e) {
                    t.setSize(parseInt(this.value)), t.setWordsNum(parseFloat(s("set-words").value) * parseInt(this.value)), t.restart(), t.score.restart()
                }), N(s("set-words"), "change", function (e) {
                    t.setWordsNum(t.getSize() * parseFloat(this.value)), t.restart(), t.score.restart()
                }), N(s("font-size-up"), "click", function (e) {
                    e.preventDefault(), t.setFontSize(t.getFontSize() + 1)
                }), N(s("font-size-down"), "click", function (e) {
                    e.preventDefault(), t.setFontSize(t.getFontSize() - 1)
                }), N(s("show-help"), "click", function (e) {
                    e.preventDefault(), s("overlay").className = "", s("help").className = "modal"
                }), N(s("overlay"), "click", function (e) {
                    s("help").className = s("congrat").className = this.className = "hide"
                }), N(this.wrap, "click", function (e) {
                    var n = e.target || e.srcElement;
                    n.tagName.toLowerCase() == "a" && (t.hint(n.parentNode.id.replace("soup-", "")), e.preventDefault())
                })
            }
        })
    }()